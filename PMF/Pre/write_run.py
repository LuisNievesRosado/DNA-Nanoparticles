import io
import sys as s

READFILE = 'toread.dat'

N = s.argv[1]


# Read data file
NUMBERS = []

F1 = open(READFILE,'r')
for line in F1:
	spl = line.split()
	NUMBERS.append(spl[0])
F1.close()		
	
	
	
# Output run files
F2 = io.open('runAA.sh','w',newline='\n')
F2.write('#!/bin/bash \n')
F2.write('#SBATCH -J "' + N + '_AA" \n')
F2.write('#SBATCH -p "fe13" \n')
F2.write('#SBATCH -N 1 \n')
F2.write('#SBATCH -n 39 \n')
F2.write('##SBATCH --ntasks-per-core=12 \n')
F2.write('#SBATCH --time=7-00:00:00 \n')
F2.write('#SBATCH -o slurm-%j.out \n')
F2.write('#SBATCH -e slurm-%j.err \n')
F2.write('#SBATCH --mail-type=END \n')
F2.write('#SBATCH --mail-user=lan58@cornell.edu \n')
F2.write('##SBATCH --use-hwthread-cpus \n')
F2.write('\n')
F2.write('### GET COMPUTE NODE NAME \n')
F2.write("node_name=$(squeue -j $SLURM_JOB_ID| awk 'NR==2{print $8}') \n")
F2.write('#node_name=$(squeue -h -o "%N" -j1000) \n')
F2.write('echo $node_name \n')
F2.write('\n')
F2.write('##STORING /tmp/ directory PATH \n')
F2.write('MYTMP=/tmp/$USER/$SLURM_JOB_ID \n')
F2.write('\n')
F2.write('##MAKING DIRECTORY IN COMPUTE /tmp/userid \n')
F2.write('/usr/bin/mkdir -p $MYTMP || exit $? \n')
F2.write('echo "Copy data to /tmp on the compute node." \n')
F2.write('\n')
F2.write('## copying files from working dir to compute node dir ## NOTE: DIRECTORY HAS BEEN EXCLUDED \n')
F2.write('cp -rp $SLURM_SUBMIT_DIR/* $MYTMP || echo $? \n')
F2.write('\n')
F2.write('##cd to directory to run your job \n')
F2.write('### SETTING UP nohup HERE \n')
F2.write('\n')
F2.write('#module load python \n')
F2.write('echo " SETTING up Python code here" \n')
F2.write('\n')
F2.write('#echo " SETTING up Python code here" \n')
F2.write('\n')
F2.write('python ~/COPYTEST/run_copy.py $node_name $MYTMP $SLURM_SUBMIT_DIR \n')
F2.write('\n')
F2.write('#~/COPYTEST \n')
F2.write('##nohup python -u ~/COPYPYTHON/run_copy.py $node_name $MYTMP $SLURM_SUBMIT_DIR > /dev/null & \n')
F2.write('\n')
F2.write('echo "copy python code setup is complete" \n')
F2.write('\n')
F2.write('##cd to directory to run your job \n')
F2.write('cd $MYTMP \n')
F2.write('\n')
F2.write('echo "Running EXECUTABLE HERE" \n')
F2.write('\n')
F2.write('mpirun -np $SLURM_NTASKS /home/fs01/lan58/software/mod_replica_3/lammps-29Sep2021/src/lmp_mpi -partition 39x1 -in hamilAA.in \n')
F2.write('\n')
F2.write('echo "Ended at `date` on `hostname`." \n')
F2.write('echo "Copy data back to $HOME." \n')
F2.write('cp -rp $MYTMP/* $SLURM_SUBMIT_DIR || exit $? \n')
F2.write('\n')
F2.write('##DELETE FOLDER in compute node \n')
F2.write('rm -rf $MYTMP \n')
F2.write('\n')
F2.write('exit 0 \n')
F2.write('\n')
F2.close()


F3 = io.open('runAB.sh','w',newline='\n')
F3.write('#!/bin/bash \n')
F3.write('#SBATCH -J "' + N + '_AB" \n')
F3.write('#SBATCH -p "fe13" \n')
F3.write('#SBATCH -N 1 \n')
F3.write('#SBATCH -n 39 \n')
F3.write('##SBATCH --ntasks-per-core=12 \n')
F3.write('#SBATCH --time=7-00:00:00 \n')
F3.write('#SBATCH -o slurm-%j.out \n')
F3.write('#SBATCH -e slurm-%j.err \n')
F3.write('#SBATCH --mail-type=END \n')
F3.write('#SBATCH --mail-user=lan58@cornell.edu \n')
F3.write('##SBATCH --use-hwthread-cpus \n')
F3.write('\n')
F3.write('### GET COMPUTE NODE NAME \n')
F3.write("node_name=$(squeue -j $SLURM_JOB_ID| awk 'NR==2{print $8}') \n")
F3.write('#node_name=$(squeue -h -o "%N" -j1000) \n')
F3.write('echo $node_name \n')
F3.write('\n')
F3.write('##STORING /tmp/ directory PATH \n')
F3.write('MYTMP=/tmp/$USER/$SLURM_JOB_ID \n')
F3.write('\n')
F3.write('##MAKING DIRECTORY IN COMPUTE /tmp/userid \n')
F3.write('/usr/bin/mkdir -p $MYTMP || exit $? \n')
F3.write('echo "Copy data to /tmp on the compute node." \n')
F3.write('\n')
F3.write('## copying files from working dir to compute node dir ## NOTE: DIRECTORY HAS BEEN EXCLUDED \n')
F3.write('cp -rp $SLURM_SUBMIT_DIR/* $MYTMP || echo $? \n')
F3.write('\n')
F3.write('##cd to directory to run your job \n')
F3.write('### SETTING UP nohup HERE \n')
F3.write('\n')
F3.write('#module load python \n')
F3.write('echo " SETTING up Python code here" \n')
F3.write('\n')
F3.write('#echo " SETTING up Python code here" \n')
F3.write('\n')
F3.write('python ~/COPYTEST/run_copy.py $node_name $MYTMP $SLURM_SUBMIT_DIR \n')
F3.write('\n')
F3.write('#~/COPYTEST \n')
F3.write('##nohup python -u ~/COPYPYTHON/run_copy.py $node_name $MYTMP $SLURM_SUBMIT_DIR > /dev/null & \n')
F3.write('\n')
F3.write('echo "copy python code setup is complete" \n')
F3.write('\n')
F3.write('##cd to directory to run your job \n')
F3.write('cd $MYTMP \n')
F3.write('\n')
F3.write('echo "Running EXECUTABLE HERE" \n')
F3.write('\n')
F3.write('mpirun -np $SLURM_NTASKS /home/fs01/lan58/software/mod_replica_3/lammps-29Sep2021/src/lmp_mpi -partition 39x1 -in hamilAB.in \n')
F3.write('\n')
F3.write('echo "Ended at `date` on `hostname`." \n')
F3.write('echo "Copy data back to $HOME." \n')
F3.write('cp -rp $MYTMP/* $SLURM_SUBMIT_DIR || exit $? \n')
F3.write('\n')
F3.write('##DELETE FOLDER in compute node \n')
F3.write('rm -rf $MYTMP \n')
F3.write('\n')
F3.write('exit 0 \n')
F3.write('\n')
F3.close()

F4 = io.open('runBB.sh','w',newline='\n')
F4.write('#!/bin/bash \n')
F4.write('#SBATCH -J "' + N + '_BB" \n')
F4.write('#SBATCH -p "fe13" \n')
F4.write('#SBATCH -N 1 \n')
F4.write('#SBATCH -n 39 \n')
F4.write('##SBATCH --ntasks-per-core=12 \n')
F4.write('#SBATCH --time=7-00:00:00 \n')
F4.write('#SBATCH -o slurm-%j.out \n')
F4.write('#SBATCH -e slurm-%j.err \n')
F4.write('#SBATCH --mail-type=END \n')
F4.write('#SBATCH --mail-user=lan58@cornell.edu \n')
F4.write('##SBATCH --use-hwthread-cpus \n')
F4.write('\n')
F4.write('### GET COMPUTE NODE NAME \n')
F4.write("node_name=$(squeue -j $SLURM_JOB_ID| awk 'NR==2{print $8}') \n")
F4.write('#node_name=$(squeue -h -o "%N" -j1000) \n')
F4.write('echo $node_name \n')
F4.write('\n')
F4.write('##STORING /tmp/ directory PATH \n')
F4.write('MYTMP=/tmp/$USER/$SLURM_JOB_ID \n')
F4.write('\n')
F4.write('##MAKING DIRECTORY IN COMPUTE /tmp/userid \n')
F4.write('/usr/bin/mkdir -p $MYTMP || exit $? \n')
F4.write('echo "Copy data to /tmp on the compute node." \n')
F4.write('\n')
F4.write('## copying files from working dir to compute node dir ## NOTE: DIRECTORY HAS BEEN EXCLUDED \n')
F4.write('cp -rp $SLURM_SUBMIT_DIR/* $MYTMP || echo $? \n')
F4.write('\n')
F4.write('##cd to directory to run your job \n')
F4.write('### SETTING UP nohup HERE \n')
F4.write('\n')
F4.write('#module load python \n')
F4.write('echo " SETTING up Python code here" \n')
F4.write('\n')
F4.write('#echo " SETTING up Python code here" \n')
F4.write('\n')
F4.write('python ~/COPYTEST/run_copy.py $node_name $MYTMP $SLURM_SUBMIT_DIR \n')
F4.write('\n')
F4.write('#~/COPYTEST \n')
F4.write('##nohup python -u ~/COPYPYTHON/run_copy.py $node_name $MYTMP $SLURM_SUBMIT_DIR > /dev/null & \n')
F4.write('\n')
F4.write('echo "copy python code setup is complete" \n')
F4.write('\n')
F4.write('##cd to directory to run your job \n')
F4.write('cd $MYTMP \n')
F4.write('\n')
F4.write('echo "Running EXECUTABLE HERE" \n')
F4.write('\n')
F4.write('mpirun -np $SLURM_NTASKS /home/fs01/lan58/software/mod_replica_3/lammps-29Sep2021/src/lmp_mpi -partition 39x1 -in hamilBB.in \n')
F4.write('\n')
F4.write('echo "Ended at `date` on `hostname`." \n')
F4.write('echo "Copy data back to $HOME." \n')
F4.write('cp -rp $MYTMP/* $SLURM_SUBMIT_DIR || exit $? \n')
F4.write('\n')
F4.write('##DELETE FOLDER in compute node \n')
F4.write('rm -rf $MYTMP \n')
F4.write('\n')
F4.write('exit 0 \n')
F4.write('\n')
F4.close()


# Output input files


F5 = io.open('hamilAA.in','w',newline='\n')
F5.write('### System setup ### \n')
F5.write('\n')
F5.write('## LAMMPS Settings ## \n')
F5.write('units 			lj \n')     
F5.write('atom_style		full \n') 
F5.write('boundary m m m \n') 
F5.write('timestep 0.005 \n')
F5.write('neigh_modify delay 1 \n')
F5.write('\n')
F5.write('### Variable definitions ### \n')
F5.write('\n')
F5.write('variable T1 equal 5.0 \n')
F5.write('variable T2 equal 1.0 \n')
F5.write('\n')
F5.write('variable E34 equal 10.0 \n')
F5.write('variable E56 equal 10.0 \n')
F5.write('variable Erep equal 1.0 \n') 
F5.write('\n')
F5.write('variable Kcore equal 3 \n')
F5.write('\n')
F5.write('\n')
F5.write('variable KB1 equal 165 # 165 is value on Ting et al \n')  
F5.write('variable KB2 equal 165 # 165 is value on Ting et al \n')  
F5.write('variable KB3 equal 165 # 165 is value on Ting et al \n')  
F5.write('variable KB4 equal 165 # 165 is value on Ting et al \n')  
F5.write('\n')
F5.write('variable KA1 equal 5  # 5 is value on Ting et al \n')
F5.write('variable KA2 equal 5  # 5 is value on Ting et al \n')
F5.write('variable KA3 equal 60  # 60 is value on Knorowski et al \n')
F5.write('\n')
F5.write('# Set up replica variables \n')
F5.write('variable DIS world 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 \n')
F5.write('variable D world 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 \n')
F5.write('variable REP world 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 \n')
F5.write('\n')
F5.write('## Read data files ## \n')
F5.write('read_data ${DIS}/in.data \n')
F5.write('\n')
F5.write('## Interaction information ## \n')
F5.write('\n')
F5.write('pair_style lj/cut 0.673 \n')
F5.write('\n')
F5.write('# 1-1 Family \n')
F5.write('pair_coeff 1 1 ${Erep} 1.0 1.122 \n')
F5.write('pair_coeff 1 2 ${Erep} 1.0 1.122 \n')
F5.write('pair_coeff 1 8 ${Erep} 1.0 1.122 \n')
F5.write('pair_coeff 2 2 ${Erep} 1.0 1.122 \n')
F5.write('pair_coeff 2 8 ${Erep} 1.0 1.122 \n')
F5.write('pair_coeff 8 8 ${Erep} 1.0 1.122 \n')
F5.write('\n')
F5.write('# 1-3 Family \n')
F5.write('pair_coeff 1 3 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 1 4 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 1 5 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 1 6 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 1 7 ${Erep} 0.8 0.898 \n')
F5.write('\n')
F5.write('pair_coeff 2 3 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 2 4 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 2 5 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 2 6 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 2 7 ${Erep} 0.8 0.898 \n')
F5.write('\n')
F5.write('pair_coeff 3 8 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 4 8 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 5 8 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 6 8 ${Erep} 0.8 0.898 \n')
F5.write('pair_coeff 7 8 ${Erep} 0.8 0.898 \n')
F5.write('\n')
F5.write('\n')
F5.write('# 3-4 \n')
F5.write('pair_coeff 3 4 ${E34} 0.6 3.0 \n')
F5.write('\n')
F5.write('# 5-6 \n')
F5.write('pair_coeff 5 6 ${E56} 0.6 3.0 \n')
F5.write('\n')
F5.write('# 3-3 Family \n')
F5.write('pair_coeff 3 3 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 4 4 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 5 5 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 6 6 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 7 7 ${Erep} 0.6 0.673 \n')
F5.write('\n')
F5.write('pair_coeff 3 5 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 3 6 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 3 7 ${Erep} 0.6 0.673 \n')
F5.write('\n')
F5.write('pair_coeff 4 5 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 4 6 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 4 7 ${Erep} 0.6 0.673 \n')
F5.write('\n')
F5.write('pair_coeff 5 7 ${Erep} 0.6 0.673 \n')
F5.write('pair_coeff 6 7 ${Erep} 0.6 0.673 \n')
F5.write('\n')
F5.write('pair_modify shift yes \n')
F5.write('#neigh_modify exclude type 1 1 \n')
F5.write('#neigh_modify exclude type 8 8 \n')
F5.write('\n')
F5.write('\n')
F5.write('bond_style harmonic \n')
F5.write('bond_coeff 1 ${KB1} 0.84 \n')
F5.write('bond_coeff 2 ${KB2} 0.84 \n')
F5.write('bond_coeff 3 ${KB3} 0.84 \n')
F5.write('bond_coeff 4 ${KB4} 1.19 \n')
F5.write('\n')
F5.write('angle_style harmonic \n')
F5.write('angle_coeff 1 ${KA1} 180 \n')
F5.write('angle_coeff 2 ${KA2} 180 \n')
F5.write('angle_coeff 3 ${KA3} 180 \n')
F5.write('\n')
F5.write('## Set-up groups \n')
F5.write('\n')
F5.write('group Core1 molecule 1 \n')
F5.write('group Core2 molecule 2 \n')
F5.write('group Cores molecule 1 2 \n')
F5.write('group Poly molecule 3 4 5 6 \n')
F5.write('\n')
F5.write('## Set-up relevant computes and output variables \n')
F5.write('compute T all temp \n')
F5.write('compute com1 Core1 com \n')
F5.write('compute com2 Core2 com \n')
F5.write('\n')
F5.write('variable overall_dist equal sqrt((c_com1[1]-c_com2[1])^2.0+(c_com1[2]-c_com2[2])^2.0+(c_com1[3]-c_com2[3])^2.0) \n')
F5.write('\n')
F5.write('variable overall_dist_1 atom sqrt((c_com1[1]-c_com2[1])^2.0+(c_com1[2]-c_com2[2])^2.0+(c_com1[3]-c_com2[3])^2.0) \n')
F5.write('\n')
F5.write('compute for_temper all reduce max v_overall_dist_1 \n')
F5.write('\n')
F5.write('\n')
F5.write('### Run spring simulations \n')
F5.write('\n')
F5.write('velocity Poly create ${T2} 191 mom yes rot yes dist gaussian \n')
F5.write('\n')
F5.write('\n')
F5.write('fix 3 Cores rigid/nvt molecule temp ${T2} ${T2} $(100.0*dt) \n')
F5.write('fix 4 Core1 spring couple Core2 ${Kcore} 0.0 0.0 0.0 $D \n')
F5.write('fix 2 Poly nvt temp ${T2} ${T2} $(100.0*dt) \n')
F5.write('\n')
F5.write('## Set-up simulation thermodynamic output ## \n')
F5.write('variable for_r0 equal v_overall_dist-(f_4[4]/${Kcore}) \n')
F5.write('thermo  1000 \n')
F5.write('thermo_style custom  step  temp  etotal ke pe  v_overall_dist c_for_temper v_for_r0 f_4[0] f_4[4] \n')
F5.write('\n')
F5.write('\n')
F5.write('temper 10000000 2000 $D 4 23847 829412 \n')
F5.close()

F6 = io.open('hamilAB.in','w',newline='\n')
F6.write('### System setup ### \n')
F6.write('\n')
F6.write('## LAMMPS Settings ## \n')
F6.write('units 			lj \n')     
F6.write('atom_style		full \n') 
F6.write('boundary m m m \n') 
F6.write('timestep 0.005 \n')
F6.write('neigh_modify delay 1 \n')
F6.write('\n')
F6.write('### Variable definitions ### \n')
F6.write('\n')
F6.write('variable T1 equal 5.0 \n')
F6.write('variable T2 equal 1.0 \n')
F6.write('\n')
F6.write('variable E34 equal 10.0 \n')
F6.write('variable E56 equal 10.0 \n')
F6.write('variable Erep equal 1.0 \n') 
F6.write('\n')
F6.write('variable Kcore equal 3 \n')
F6.write('\n')
F6.write('\n')
F6.write('variable KB1 equal 165 # 165 is value on Ting et al \n')  
F6.write('variable KB2 equal 165 # 165 is value on Ting et al \n')  
F6.write('variable KB3 equal 165 # 165 is value on Ting et al \n')  
F6.write('variable KB4 equal 165 # 165 is value on Ting et al \n')  
F6.write('\n')
F6.write('variable KA1 equal 5  # 5 is value on Ting et al \n')
F6.write('variable KA2 equal 5  # 5 is value on Ting et al \n')
F6.write('variable KA3 equal 60  # 60 is value on Knorowski et al \n')
F6.write('\n')
F6.write('# Set up replica variables \n')
F6.write('variable DIS world 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 \n')
F6.write('variable D world 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 \n')
F6.write('variable REP world 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 \n')
F6.write('\n')
F6.write('## Read data files ## \n')
F6.write('read_data ${DIS}/in.data \n')
F6.write('\n')
F6.write('## Interaction information ## \n')
F6.write('\n')
F6.write('pair_style lj/cut 0.673 \n')
F6.write('\n')
F6.write('# 1-1 Family \n')
F6.write('pair_coeff 1 1 ${Erep} 1.0 1.122 \n')
F6.write('pair_coeff 1 2 ${Erep} 1.0 1.122 \n')
F6.write('pair_coeff 1 8 ${Erep} 1.0 1.122 \n')
F6.write('pair_coeff 2 2 ${Erep} 1.0 1.122 \n')
F6.write('pair_coeff 2 8 ${Erep} 1.0 1.122 \n')
F6.write('pair_coeff 8 8 ${Erep} 1.0 1.122 \n')
F6.write('\n')
F6.write('# 1-3 Family \n')
F6.write('pair_coeff 1 3 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 1 4 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 1 5 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 1 6 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 1 7 ${Erep} 0.8 0.898 \n')
F6.write('\n')
F6.write('pair_coeff 2 3 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 2 4 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 2 5 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 2 6 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 2 7 ${Erep} 0.8 0.898 \n')
F6.write('\n')
F6.write('pair_coeff 3 8 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 4 8 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 5 8 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 6 8 ${Erep} 0.8 0.898 \n')
F6.write('pair_coeff 7 8 ${Erep} 0.8 0.898 \n')
F6.write('\n')
F6.write('\n')
F6.write('# 3-4 \n')
F6.write('pair_coeff 3 4 ${E34} 0.6 3.0 \n')
F6.write('\n')
F6.write('# 5-6 \n')
F6.write('pair_coeff 5 6 ${E56} 0.6 3.0 \n')
F6.write('\n')
F6.write('# 3-3 Family \n')
F6.write('pair_coeff 3 3 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 4 4 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 5 5 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 6 6 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 7 7 ${Erep} 0.6 0.673 \n')
F6.write('\n')
F6.write('pair_coeff 3 5 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 3 6 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 3 7 ${Erep} 0.6 0.673 \n')
F6.write('\n')
F6.write('pair_coeff 4 5 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 4 6 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 4 7 ${Erep} 0.6 0.673 \n')
F6.write('\n')
F6.write('pair_coeff 5 7 ${Erep} 0.6 0.673 \n')
F6.write('pair_coeff 6 7 ${Erep} 0.6 0.673 \n')
F6.write('\n')
F6.write('pair_modify shift yes \n')
F6.write('#neigh_modify exclude type 1 1 \n')
F6.write('#neigh_modify exclude type 8 8 \n')
F6.write('\n')
F6.write('\n')
F6.write('bond_style harmonic \n')
F6.write('bond_coeff 1 ${KB1} 0.84 \n')
F6.write('bond_coeff 2 ${KB2} 0.84 \n')
F6.write('bond_coeff 3 ${KB3} 0.84 \n')
F6.write('bond_coeff 4 ${KB4} 1.19 \n')
F6.write('\n')
F6.write('angle_style harmonic \n')
F6.write('angle_coeff 1 ${KA1} 180 \n')
F6.write('angle_coeff 2 ${KA2} 180 \n')
F6.write('angle_coeff 3 ${KA3} 180 \n')
F6.write('\n')
F6.write('## Set-up groups \n')
F6.write('\n')
F6.write('group Core1 molecule 1 \n')
F6.write('group Core2 molecule 2 \n')
F6.write('group Cores molecule 1 2 \n')
F6.write('group Poly molecule 3 4 5 6 \n')
F6.write('\n')
F6.write('## Set-up relevant computes and output variables \n')
F6.write('compute T all temp \n')
F6.write('compute com1 Core1 com \n')
F6.write('compute com2 Core2 com \n')
F6.write('\n')
F6.write('variable overall_dist equal sqrt((c_com1[1]-c_com2[1])^2.0+(c_com1[2]-c_com2[2])^2.0+(c_com1[3]-c_com2[3])^2.0) \n')
F6.write('\n')
F6.write('variable overall_dist_1 atom sqrt((c_com1[1]-c_com2[1])^2.0+(c_com1[2]-c_com2[2])^2.0+(c_com1[3]-c_com2[3])^2.0) \n')
F6.write('\n')
F6.write('compute for_temper all reduce max v_overall_dist_1 \n')
F6.write('\n')
F6.write('\n')
F6.write('### Run spring simulations \n')
F6.write('\n')
F6.write('velocity Poly create ${T2} 191 mom yes rot yes dist gaussian \n')
F6.write('\n')
F6.write('\n')
F6.write('fix 3 Cores rigid/nvt molecule temp ${T2} ${T2} $(100.0*dt) \n')
F6.write('fix 4 Core1 spring couple Core2 ${Kcore} 0.0 0.0 0.0 $D \n')
F6.write('fix 2 Poly nvt temp ${T2} ${T2} $(100.0*dt) \n')
F6.write('\n')
F6.write('## Set-up simulation thermodynamic output ## \n')
F6.write('variable for_r0 equal v_overall_dist-(f_4[4]/${Kcore}) \n')
F6.write('thermo  1000 \n')
F6.write('thermo_style custom  step  temp  etotal ke pe  v_overall_dist c_for_temper v_for_r0 f_4[0] f_4[4] \n')
F6.write('\n')
F6.write('\n')
F6.write('temper 10000000 2000 $D 4 23847 829412 \n')
F6.close()


F7 = io.open('hamilBB.in','w',newline='\n')
F7.write('### System setup ### \n')
F7.write('\n')
F7.write('## LAMMPS Settings ## \n')
F7.write('units 			lj \n')     
F7.write('atom_style		full \n') 
F7.write('boundary m m m \n') 
F7.write('timestep 0.005 \n')
F7.write('neigh_modify delay 1 \n')
F7.write('\n')
F7.write('### Variable definitions ### \n')
F7.write('\n')
F7.write('variable T1 equal 5.0 \n')
F7.write('variable T2 equal 1.0 \n')
F7.write('\n')
F7.write('variable E34 equal 10.0 \n')
F7.write('variable E56 equal 10.0 \n')
F7.write('variable Erep equal 1.0 \n') 
F7.write('\n')
F7.write('variable Kcore equal 3 \n')
F7.write('\n')
F7.write('\n')
F7.write('variable KB1 equal 165 # 165 is value on Ting et al \n')  
F7.write('variable KB2 equal 165 # 165 is value on Ting et al \n')  
F7.write('variable KB3 equal 165 # 165 is value on Ting et al \n')  
F7.write('variable KB4 equal 165 # 165 is value on Ting et al \n')  
F7.write('\n')
F7.write('variable KA1 equal 5  # 5 is value on Ting et al \n')
F7.write('variable KA2 equal 5  # 5 is value on Ting et al \n')
F7.write('variable KA3 equal 60  # 60 is value on Knorowski et al \n')
F7.write('\n')
F7.write('# Set up replica variables \n')
F7.write('variable DIS world 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 \n')
F7.write('variable D world 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 \n')
F7.write('variable REP world 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 \n')
F7.write('\n')
F7.write('## Read data files ## \n')
F7.write('read_data ${DIS}/in.data \n')
F7.write('\n')
F7.write('## Interaction information ## \n')
F7.write('\n')
F7.write('pair_style lj/cut 0.673 \n')
F7.write('\n')
F7.write('# 1-1 Family \n')
F7.write('pair_coeff 1 1 ${Erep} 1.0 1.122 \n')
F7.write('pair_coeff 1 2 ${Erep} 1.0 1.122 \n')
F7.write('pair_coeff 1 8 ${Erep} 1.0 1.122 \n')
F7.write('pair_coeff 2 2 ${Erep} 1.0 1.122 \n')
F7.write('pair_coeff 2 8 ${Erep} 1.0 1.122 \n')
F7.write('pair_coeff 8 8 ${Erep} 1.0 1.122 \n')
F7.write('\n')
F7.write('# 1-3 Family \n')
F7.write('pair_coeff 1 3 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 1 4 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 1 5 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 1 6 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 1 7 ${Erep} 0.8 0.898 \n')
F7.write('\n')
F7.write('pair_coeff 2 3 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 2 4 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 2 5 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 2 6 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 2 7 ${Erep} 0.8 0.898 \n')
F7.write('\n')
F7.write('pair_coeff 3 8 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 4 8 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 5 8 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 6 8 ${Erep} 0.8 0.898 \n')
F7.write('pair_coeff 7 8 ${Erep} 0.8 0.898 \n')
F7.write('\n')
F7.write('\n')
F7.write('# 3-4 \n')
F7.write('pair_coeff 3 4 ${E34} 0.6 3.0 \n')
F7.write('\n')
F7.write('# 5-6 \n')
F7.write('pair_coeff 5 6 ${E56} 0.6 3.0 \n')
F7.write('\n')
F7.write('# 3-3 Family \n')
F7.write('pair_coeff 3 3 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 4 4 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 5 5 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 6 6 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 7 7 ${Erep} 0.6 0.673 \n')
F7.write('\n')
F7.write('pair_coeff 3 5 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 3 6 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 3 7 ${Erep} 0.6 0.673 \n')
F7.write('\n')
F7.write('pair_coeff 4 5 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 4 6 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 4 7 ${Erep} 0.6 0.673 \n')
F7.write('\n')
F7.write('pair_coeff 5 7 ${Erep} 0.6 0.673 \n')
F7.write('pair_coeff 6 7 ${Erep} 0.6 0.673 \n')
F7.write('\n')
F7.write('pair_modify shift yes \n')
F7.write('#neigh_modify exclude type 1 1 \n')
F7.write('#neigh_modify exclude type 8 8 \n')
F7.write('\n')
F7.write('\n')
F7.write('bond_style harmonic \n')
F7.write('bond_coeff 1 ${KB1} 0.84 \n')
F7.write('bond_coeff 2 ${KB2} 0.84 \n')
F7.write('bond_coeff 3 ${KB3} 0.84 \n')
F7.write('bond_coeff 4 ${KB4} 1.19 \n')
F7.write('\n')
F7.write('angle_style harmonic \n')
F7.write('angle_coeff 1 ${KA1} 180 \n')
F7.write('angle_coeff 2 ${KA2} 180 \n')
F7.write('angle_coeff 3 ${KA3} 180 \n')
F7.write('\n')
F7.write('## Set-up groups \n')
F7.write('\n')
F7.write('group Core1 molecule 1 \n')
F7.write('group Core2 molecule 2 \n')
F7.write('group Cores molecule 1 2 \n')
F7.write('group Poly molecule 3 4 5 6 \n')
F7.write('\n')
F7.write('## Set-up relevant computes and output variables \n')
F7.write('compute T all temp \n')
F7.write('compute com1 Core1 com \n')
F7.write('compute com2 Core2 com \n')
F7.write('\n')
F7.write('variable overall_dist equal sqrt((c_com1[1]-c_com2[1])^2.0+(c_com1[2]-c_com2[2])^2.0+(c_com1[3]-c_com2[3])^2.0) \n')
F7.write('\n')
F7.write('variable overall_dist_1 atom sqrt((c_com1[1]-c_com2[1])^2.0+(c_com1[2]-c_com2[2])^2.0+(c_com1[3]-c_com2[3])^2.0) \n')
F7.write('\n')
F7.write('compute for_temper all reduce max v_overall_dist_1 \n')
F7.write('\n')
F7.write('\n')
F7.write('### Run spring simulations \n')
F7.write('\n')
F7.write('velocity Poly create ${T2} 191 mom yes rot yes dist gaussian \n')
F7.write('\n')
F7.write('\n')
F7.write('fix 3 Cores rigid/nvt molecule temp ${T2} ${T2} $(100.0*dt) \n')
F7.write('fix 4 Core1 spring couple Core2 ${Kcore} 0.0 0.0 0.0 $D \n')
F7.write('fix 2 Poly nvt temp ${T2} ${T2} $(100.0*dt) \n')
F7.write('\n')
F7.write('## Set-up simulation thermodynamic output ## \n')
F7.write('variable for_r0 equal v_overall_dist-(f_4[4]/${Kcore}) \n')
F7.write('thermo  1000 \n')
F7.write('thermo_style custom  step  temp  etotal ke pe  v_overall_dist c_for_temper v_for_r0 f_4[0] f_4[4] \n')
F7.write('\n')
F7.write('\n')
F7.write('temper 10000000 2000 $D 4 23847 829412 \n')
F7.close()



	





